!function(i,n){n.module("idex-json-visualizer",["ngSanitize"])}(window,window.angular);
!function(i,e){function n(i,e){function n(n,t,r){var d,o,u=r.idexBind.trim().replace(/^\(/,"").replace(/\)$/,"").split("|");d=u[0].trim(),o=u[1].trim(),t[0].removeAttribute("idex-bind"),t[0].setAttribute("ng-bind","("+e(d)(n)+" | "+o+")"),i(t[0])(n)}var t={};return t.link=n,t}e.module("idex-json-visualizer").directive("idexBind",n),n.$inject=["$compile","$parse"]}(window,window.angular);
!function(e,i){function n(e,n,o,t,r,c){function d(e){function o(e,o,t){function c(i,o){var t=i.indexOf(o);"string"==typeof i&&(i=n(i)(e)),~t?i.splice(t,1):i.push(o)}function d(e,i){return!~e.indexOf(i)}var l=n(t.idexCheckbox)(e);e.modelName="string"==typeof l?l:t.idexCheckbox,e.model="string"==typeof l?n(l)(e):l,e.dummy=i.copy(e.model),e.blueprint=t.hasOwnProperty("idexBlueprint")?n(t.idexBlueprint)(e):r.converToBlueprint(i.copy(e.model)),e.change=c,e.contains=d}return{post:o}}var l={};return l.templateUrl="checkbox/idex-checkbox.directive.html",l.scope=!0,l.compile=d,l}i.module("idex-json-visualizer").directive("idexCheckbox",n),n.$inject=["$compile","$parse","$templateCache","$window","jsonVisualizer","recursionHelper"]}(window,window.angular);
!function(e,i){function n(e,i,n){function t(e,n){return{pre:function(e,n,t){console.log(i(t.idexInput)(e))}}}var o={};return o.templateUrl="json-visualizer/idex-input.directive.html",o.compile=t,o}i.module("idex-json-visualizer").directive("idexInput",n),n.$inject=["$interpolate","$parse","$templateCache"]}(window,window.angular);
!function(e,r){function n(){return function(e){return Object.keys(e).map(function(r){return e[r]}).sort(function(e,r){return e.weight>r.weight?-1:e.weight<r.weight?1:0})}}function i(e){function n(n,i){var t,o=n.contents().remove();return r.isFunction(i)&&(i={post:i}),{pre:i&&i.hasOwnProperty("pre")?i.pre:null,post:function(r,n){t||(t=e(o)),t(r,function(e){n.append(e)}),i&&i.hasOwnProperty("post")&&i.post.apply(null,arguments)}}}return{compile:n}}function t(e,n,i,t){function o(e,r){var i=n.get("json-visualizer/idex-json-visualizer.directive.html");return r.hasOwnProperty("idexFormName")?'<form id="'+r.idexFormName+'" name="'+r.idexFormName+'">'+i+"</form>":i}function u(n){function o(n,t,o){var u=e(o.idexJsonVisualizer)(n);n.formName=o.idexFormName,n.modelName="string"==typeof u?u:o.idexJsonVisualizer,n.model="string"==typeof u?e(u)(n):u,n.blueprint=i.normalizeBlueprint(o.hasOwnProperty("idexBlueprint")?e(o.idexBlueprint)(n):i.converToBlueprint(r.copy(n.model)))}return t.compile(n,{post:o})}var p={};return p.template=o,p.scope=!0,p.compile=u,p}r.module("idex-json-visualizer").filter("orderByWeight",n).factory("recursionHelper",i).directive("idexJsonVisualizer",t),i.$inject=["$compile"],t.$inject=["$parse","$templateCache","jsonVisualizer","recursionHelper"]}(window,window.angular);
!function(e,i){function n(e,i){function n(n,o,t){o[0].removeAttribute("idex-model"),o[0].setAttribute("ng-model",i(t.idexModel)(n)),e(o[0])(n)}var o={};return o.link=n,o}i.module("idex-json-visualizer").directive("idexModel",n),n.$inject=["$compile","$parse"]}(window,window.angular);
!function(e,i){function t(e,t,o,n,r,c){function l(e){function o(e,o,n){function c(i,o){"string"==typeof i&&(i=t(i)(e)),o=(o||"").trim(),""!==o&&i.push(o)}function l(i,o){"string"==typeof i&&(i=t(i)(e)),i.splice(o,1)}var u=t(n.idexMultiChoice)(e);e.modelName="string"==typeof u?u:n.idexMultiChoice,e.model="string"==typeof u?t(u)(e):u,e.blueprint=n.hasOwnProperty("idexBlueprint")?t(n.idexBlueprint)(e):r.converToBlueprint(i.copy(e.model)),e.add=c,e.remove=l}return{post:o}}var u={};return u.templateUrl="multi-choice/idex-multi-choice.directive.html",u.scope=!0,u.compile=l,u}i.module("idex-json-visualizer").directive("idexMultiChoice",t),t.$inject=["$compile","$parse","$templateCache","$window","jsonVisualizer","recursionHelper"]}(window,window.angular);
!function(e,n){function r(e){function r(e){function r(e){function t(t,i){return n.isObject(i)&&!n.isArray(i)?{type:"object",children:r(e[t])}:n.isString(i)?{type:"string"}:n.isArray(i)?{type:"array",widgetOptions:i.map(function(e){return{type:"string",label:e.cleanUpLabel(),value:e}})}:void 0}return Object.keys(e).forEach(function(n){var r=e[n];e[n]=t(n,r)}),e}return r(e)}function t(e){function r(e){function t(e,t){var i={key:e,label:e.cleanUpLabel(),required:!1,editable:!0,weight:0,widgetType:function(e){switch(e){case"string":return"text";case"array":return"idex-multi-choice";case"object":return"fieldset"}}(t.type),visible:!0};return t.hasOwnProperty("children")&&(t.children=r(t.children)),n.extend(i,t)}return e?(Object.keys(e).forEach(function(n){e[n]=t(n,e[n])}),e):e}return r(e)}var i={};return i.converToBlueprint=r,i.normalizeBlueprint=t,i}n.module("idex-json-visualizer").factory("jsonVisualizer",r),r.$inject=["$window"],String.prototype.cleanUpLabel=function(){var e=this;return e=e.trim(),this.length>3&&(e=e.replace(/([A-Z])/g," $1").toLowerCase(),e=e.replace("_"," "),e=e.slice(0,1).replace(/^./,function(e){return e.toUpperCase()})+e.slice(1)),e}}(window,window.angular);
angular.module("idex-json-visualizer").run(["$templateCache",function(e){e.put("checkbox/idex-checkbox.directive.html",'<div class="checkbox">\n    <div class="checkbox__elements">\n        <div class="checkbox__element" ng-repeat="option in settings.widgetOptions track by $index">\n            <input id="{{ settings.key }}__{{ $index }}" name="{{ settings.key }}__{{ $index }}" type="checkbox" class="checkbox" ng-checked="model.indexOf(option.value) !== -1" ng-click="change(model, option.value)"/>&nbsp;<div class="label">{{ option.label }}</div>\n        </div>\n    </div>\n</div>\n\n'),e.put("json-visualizer/idex-input.directive.html","<div>{{ abc }}</div>"),e.put("json-visualizer/idex-json-visualizer.directive.html",'\n<div class="json-visualizer">\n\n    <div class="json-visualizer__items">\n\n        <div class="json-visualizer__items__item" ng-repeat="settings in ::blueprint | orderByWeight">\n\n            <div ng-switch="settings.widgetType">\n\n                <div ng-switch-when="text" ng-if="settings.visible">\n\n                    <label for="{{ settings.key }}">\n                        <div class="label">{{ settings.label }}</div>\n                        <input id="{{ settings.key }}"\n                               name="{{ settings.key }}"\n                               type="text" ng-if="settings.editable"\n                               ng-required="settings.required"\n                               ng-pattern="settings.regexp"\n                               idex-model="modelName + \'.\' + settings.key" />\n                        <div class="body" ng-if="!settings.editable"\n                             idex-bind="(modelName + \'.\' + settings.key | date : \'fullDate\')"></div>\n                    </label>\n\n                </div>\n\n                <div ng-switch-when="fieldset">\n\n                    <fieldset class="fieldset">\n\n                        <legend class="legend">{{ settings.label }}</legend>\n\n                        <div idex-json-visualizer="modelName + \'.\' + settings.key" idex-blueprint="settings.children"></div>\n\n                    </fieldset>\n                </div>\n\n                <div ng-switch-when="idex-multi-choice">\n\n                    <label for="{{ settings.key }}">\n                        <div class="label">{{ settings.label }}</div>\n                        <div idex-multi-choice="modelName + \'.\' + settings.key" idex-blueprint="settings"></div>\n                    </label>\n\n                </div>\n\n                <div ng-switch-when="checkbox">\n\n                    <label>\n                        <div class="label">{{ settings.label }}</div>\n                        <div idex-checkbox="modelName + \'.\' + settings.key" idex-blueprint="settings"></div>\n                    </label>\n\n                </div>\n\n                <div ng-switch-when="radio">\n\n                    <label>\n                        <div class="label">{{ settings.label }}</div>\n\n                        <label for="{{ settings.key }}__{{ $index }}" ng-repeat="option in settings.widgetOptions">\n                            <input id="{{ settings.key }}__{{ $index }}" name="{{ settings.key }}__{{ $index }}" type="radio" ng-value="option.value" idex-model="modelName + \'.\' + settings.key" />&nbsp;<div class="label">{{ option.label }}</div>\n                        </label>\n                    </label>\n\n                </div>\n\n            </div>\n\n        </div>\n\n    </div>\n\n</div>'),e.put("multi-choice/idex-multi-choice.directive.html",'<div class="multi-choice">\n    <div class="multi-choice__elements">\n        <div class="multi-choice__element" ng-repeat="value in model track by $index">\n            <input type="text" class="input" ng-required="blueprint.required" ng-pattern="blueprint.regexp" idex-model="modelName + \'[\' + $index + \']\'"/>\n            <button class="button" ng-click="remove(modelName, $index)">Remove</button>\n        </div>\n    </div>\n    <div class="multi-choice__controls">\n        <input type="text" class="input" ng-model="dummyValue"/>\n        <button class="button" ng-click="add(modelName, dummyValue); dummyValue = \'\'">Add value</button>\n    </div>\n</div>\n\n')}]);